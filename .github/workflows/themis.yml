---
name: Sample Themis Workflow
inputs:
  pat_token:
    description: 'The Personal Access token used to call the API \nThis action required org admin previleges'
    required: true
  issue_body_json:
    description: 'The JSON from the parsed issue body'
    required: true  
  issue_name:
    description: 'The name of the issue template that created this form'
    required: true  
outputs:
  status: # output will be available to future steps
    description: 'The Status of a particular request'
runs:
  using: 'node12'
  main: 'dist/index.js'
  
on:
  issues:
    types: [opened, reopened]    
jobs:
  test:
    name: Test Action
    if: contains(github.event.issue.labels.*.name, 'issueops')

    runs-on: ubuntu-20.04
    
    steps:
    - id: parse
      name: Run Issue form parser
      uses: peter-murray/issue-forms-body-parser@v2.0.0
      with:
        issue_id: ${{ github.event.issue.number }}
        separator: '###'
        label_marker_start: '>>'
        label_marker_end: '<<' 

    - name: Show parsed data JSON
      run: |
        echo "${{ steps.parse.outputs.payload }}"

    - name: Process the Request using Themis
      id: themis
      uses: decyjphr-actions/themis@HEAD
      with:
        issue_body_json: '${{ steps.parse.outputs.payload }}'
        pat_token: ${{secrets.pat_token}}
        
    - name: Process Failure
      if: ${{ failure() }}
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try { 
            await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: ':x: Sorry, your request could not be processed\n${{steps.themis.outputs.status}}'
            }) 
          } catch(err) {
            throw err
          }

    - name: Process Success
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try { 
            await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: ':white_check_mark: Congrats, your request has been processed\n${{steps.themis.outputs.status}}' 
            }) 
          } catch(err) {
            throw err
          }
